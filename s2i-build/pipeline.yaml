apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-s2i-demo
spec:
  params:
    - default: springboot-hello-world2
      description: The application deployment name
      name: APP_NAME
      type: string
    - default: quay.io/malam/springboot-hello-world2:latest
      description: The application deployment name
      name: image-name
      type: string
    - default: 'https://github.com/malam84/springboot-hello-world2.git'
      description: The application git repository url
      name: GIT_URL
      type: string
    - default: master
      description: The application git repository revision
      name: GIT_REVISION
      type: string
    - name: manifest-dir
      type: string
  resources:
  - name: image
    type: image
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_URL)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: maven-source
    - name: mvn-package
      params:
        - name: GOALS
          value:
            - package
            - '-DskipTests'
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-cache-repo
          workspace: maven-cache-repo
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: maven-source
    - name: mvn-test
      params:
        - name: GOALS
          value:
            - verify
      runAfter:
        - mvn-package
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-cache-repo
          workspace: maven-cache-repo
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: maven-source
    - name: sonarqube
      runAfter:
        - mvn-package
      taskRef:
        kind: Task
        name: sonarqube-scanner
      workspaces:
        - name: source-dir
          workspace: maven-source
        - name: sonar-settings
          workspace: sonar-settings
    - name: build-image
      params:
      - name: TLSVERIFY
        value: "false"
      - name: MAVEN_CLEAR_REPO
        value: 'false'
      runAfter:
        - mvn-test
        - sonarqube
      taskRef:
        kind: Task
        name: s2i-java-11
      resources:
        outputs:
        - name: image
          resource: image
      workspaces:
        - name: source
          workspace: maven-source
    - name: clear-resources
      params:
        - name: appName
          value: $(params.APP_NAME)
      taskRef:
        kind: Task
        name: clear-resources
      runAfter:
        - build-image
    - name: push-to-quay
      resources:
        inputs:
        - name: image
          resource: image
      taskRef:
        kind: Task
        name: push-image-to-quay
      runAfter:
        - build-image
    - name: deploy
      taskRef:
        name: redeploy
        kind: Task
      runAfter:
      - push-to-quay
      - clear-resources
      params:
      - name: DEPLOYMENT_NAME
        value: $(params.APP_NAME)
      - name: DEPLOYMENT_IMAGE_NAME
        value: $(params.image-name)
      workspaces:
      - name: source
        workspace: maven-source
  workspaces:
    - name: maven-source
    - name: maven-settings
    - name: maven-cache-repo
    - name: sonar-settings