apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
spec:
  description: >-
    Buildah task builds source into a container image and then pushes it to a
    container registry.

    Buildah Task builds source into a container image using Project Atomic's
    Buildah build tool.It uses Buildah's support for building from Dockerfiles,
    using its buildah bud command.This command executes the directives in the
    Dockerfile to assemble a container image, then pushes that image to a
    container registry.
  params:
    - name: repo-id
      description: The quay.io account that matches the credentials stored in the mounted secret.
      type: string
      default: ""
    - name: repo-name
      description: The quay.io repository in which to store the image.
      type: string
      default: ""
    - name: tag-image
      description: The tag to use to identify the image.
      type: string
      default: "latest"
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:99cae35f40c7ec050fed3765b2b27e0b8bbea2aa2da7c16408e2ca13c60ff8ee
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: vfs
      description: Set buildah storage driver
      name: STORAGE_DRIVER
      type: string
    - default: ./Dockerfile
      description: Path to the Dockerfile to build.
      name: DOCKERFILE
      type: string
    - default: .
      description: Path to the directory to use as context.
      name: CONTEXT
      type: string
    - default: 'false'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: oci
      description: 'The format of the built container, oci or docker'
      name: FORMAT
      type: string
    - default: ''
      description: Extra parameters passed for the build command when building images.
      name: BUILD_EXTRA_ARGS
      type: string
    - default: ''
      description: Extra parameters passed for the push command when pushing images.
      name: PUSH_EXTRA_ARGS
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
  steps:
    - image: $(params.BUILDER_IMAGE)
      name: build
      resources: {}
      script: |
        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          $(params.BUILD_EXTRA_ARGS) --format=$(params.FORMAT) \
          --tls-verify=$(params.TLSVERIFY) --no-cache \
          -f $(params.DOCKERFILE) -t quay.io/$(params.repo-id)/$(params.repo-name):$(params.tag-image) $(params.CONTEXT)
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: $(workspaces.source.path)
    - command:
        - buildah
        - push
        - '--storage-driver=vfs'
        - '--authfile'
        - /etc/secret-volume/config.json
        - 'quay.io/$(params.repo-id)/$(params.repo-name):$(params.tag-image)'
      image: $(params.BUILDER_IMAGE)
      name: push-image-to-quay
      resources: {}
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
  volumes:
    - name: quay-auth-secret
      secret:
        items:
          - key: .dockerconfigjson
            path: config.json
        secretName: dockerconfigjson
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: pipeline-task-cache-pvc
  workspaces:
    - name: source
